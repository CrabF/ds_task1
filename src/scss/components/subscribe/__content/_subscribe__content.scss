.subscribe__content {
  width: 624px;
  height: 390px;
  display: flex;
  flex-direction: column;
  margin-left: 104px;
  & * {
    margin: 0;
    padding: 0;
  }
  & h3 {
    @include subscribeTitle;
    margin-bottom: 8px;
  }
  & p {
    @include subscribeSubTitle;
    max-width: 584px;
  }
  & form {
    display: flex;
    flex-direction: column;
    margin-top: 88px;
    & > span {
      display: flex;
      margin-top: 16px;

      input[type="checkbox"] {
        display: none;

        &:checked + label {
          background-color: map-get($mainColors, white-dark);
        }

        &:checked + label::after {
          content: "";
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          width: 13px;
          height: 9px;
          background-image: url("../../../../../public/images/subscribe/check.svg");
          background-size: cover;
        }
      }

      label {
        display: flex;
        align-items: center;
        width: 24px;
        height: 24px;
        border: 2px solid map-get($mainColors, white-dark);
        border-radius: 4px;
        margin-right: 16px;
        position: relative;
        cursor: pointer;
        transition: background-color 0.3s;

        &::after {
          content: "";
          display: none;
        }
        &:hover {
          background-color: map-get($mainColors, gray5tr20);
        }
        input[type="checkbox"]:disabled + label {
          opacity: 0.4;
          cursor: not-allowed;
        }
        &:focus {
          border: 2px solid map-get($mainColors, black-dark);
        }
      }

      input[type="checkbox"]:checked + label::after {
        display: block;
      }
      & > p {
        @include subscribeAdditionalText;
      }
    }
    & > div {
      display: flex;
      & button {
        width: 280px;
        height: 49px;
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 40px;
        background-color: map-get($textColors, coral-dark);
        border: none;
        cursor: pointer;
        @include buttonText;
        outline: 0;

        &:hover {
          background-color: map-get($mainColors, black-dark);
        }
        &:disabled {
          opacity: 60%;
        }
        &:active {
          background-color: map-get($mainColors, black-dark);
        }
        &:focus {
          border: 2px solid map-get($mainColors, black-dark);
        }
      }
    }
  }
}
